{"version":3,"sources":["components/Navbar.js","components/list-item.js","components/favItem.js","components/search.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","tabCallback","className","src","alt","href","onClick","ListItem","data","dataPlanets","addFav","useState","input","setInput","elements","filter","el","name","toLowerCase","match","eye_color","birth_year","map","e","key","top","elementsPlanet","climate","terrain","type","placeholder","aria-label","value","onChange","target","FavItems","favDataOfPlanet","favDataOfPeople","remFav","console","log","Tab","setTab","elementOfPeople","elementOfPlanet","showAll","selectionOfTab","storageForPeople","storageForPlanet","Search","tabSelected","people","setPeople","planets","setPlanets","favPeople","setFavPeople","favPlanet","setFavPlanet","useEffect","callApi","baseUrlPeople","axios","get","then","res","temp2","push","results","next","catch","err","callApiPlanets","baseUrlPlanets","temp2Plantes","element","from","some","ele","window","alert","storage","elm","createFavoriteList","indexOfPeople","indexOf","splice","indexOfPlanet","removeFavouriteItemList","App","currentTab","setCurrentTab","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f3807394.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Navbar=({tabCallback})=>{\r\n    return(\r\n        <nav className=\"nav-wrapper orange \">\r\n         \r\n\r\n         \r\n            <img src=\"https://img.icons8.com/clouds/100/000000/black-jaguar.png\" alt='logo' />\r\n                <a className=\"brand-logo\" href=\"https://img.icons8.com/clouds/100/000000/black-jaguar.png\">React APP</a>\r\n                <ul className=\"right\" >\r\n                    {/* <li><div className='favBtn' onClick={()=>tabCallback('home')}>Home</div></li> */}\r\n                    <li ><div className='favBtn' onClick={()=>tabCallback('favourite')}>FavouriteItem</div></li>\r\n                    <li ><div className='favBtn' onClick={()=>tabCallback('')}>||</div></li>\r\n                    \r\n                    <li ><div className='favBtn' onClick={()=>tabCallback('search')}>Search</div></li>\r\n                </ul>\r\n           \r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useState } from 'react'\r\nimport { Container, Card, CardBody, CardImg } from \"shards-react\";\r\n\r\nconst ListItem = ({ data, dataPlanets, addFav }) => {\r\n  const [input, setInput] = useState('')\r\n  const elements = data\r\n    .filter(\r\n      (el) =>\r\n        el.name.toLowerCase().match(input.toLowerCase()) || \r\n        el.eye_color.toLowerCase().match(input.toLowerCase()) ||\r\n        el.birth_year.toLowerCase().match(input.toLowerCase())\r\n    )\r\n    .map((e) => ( \r\n      <Container key={e.name} >\r\n      <Card >\r\n      <CardBody>\r\n          <div ><CardImg top src={\"https://img.icons8.com/color/48/000000/they.png\"} alt='logo'/><b>People</b></div>\r\n          <div>\r\n            <div>Name:{e.name}</div>\r\n            <div>Eye Color: {e.eye_color}</div>\r\n            <div>Age:{e.birth_year}</div>\r\n            <button className=\"btn btn-success\" onClick={() => addFav(e, 'people')}>\r\n            ADD to Favorites\r\n            </button>\r\n        </div>\r\n        </CardBody>    \r\n        \r\n      </Card>   \r\n\r\n</Container>\r\n    ))\r\n  \r\n  const elementsPlanet = dataPlanets\r\n    .filter(\r\n      (el) =>\r\n        el.name.toLowerCase().match(input.toLowerCase()) || \r\n        el.climate.toLowerCase().match(input.toLowerCase()) ||\r\n        el.terrain.toLowerCase().match(input.toLowerCase())\r\n    )\r\n    .map((e) => ( \r\n      <Container key={e.name}>\r\n      <Card>\r\n       <CardBody>\r\n      <div><CardImg top src={\"https://img.icons8.com/color/48/000000/saturn-planet.png\"} alt='logo'/><b>Planets</b></div>\r\n      \r\n        <div>Name:{e.name}</div>\r\n        <div>Climate:{e.climate}</div>\r\n        <div>Terrain:{e.terrain}</div>\r\n        <button className='btn btn-primary' onClick={() => addFav(e,'planets')}>\r\n        ADD to Favorites\r\n            </button>\r\n\r\n      \r\n    </CardBody>    \r\n    \r\n  </Card>   \r\n\r\n</Container>\r\n    ))\r\n  return (\r\n    <div className='listContainer'>\r\n       \r\n      <div > <i className=\"glyphicon glyphicon-search\"></i>\r\n        <input className=\"input-group input-group-sm mb-3\"  type=\"text\" placeholder=\"Search\" aria-label=\"Search\" value={input} onChange={(e) => setInput(e.target.value)}/>\r\n       \r\n      </div>\r\n\r\n      <div className='listItem'>\r\n        <div className='Item'>{elements}</div>\r\n        <div className='Item'>{elementsPlanet}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListItem\r\n","import React,{useState} from 'react'\r\nimport { Container, Card, CardBody, CardImg } from \"shards-react\";\r\n\r\nconst FavItems=({favDataOfPlanet,favDataOfPeople,remFav})=>{\r\n    console.log(favDataOfPlanet)\r\nconst [Tab,setTab]= useState(\"all\")\r\n\r\n    const elementOfPeople=favDataOfPeople.map((e)=>(\r\n        <Container key={e.name} >\r\n          <Card >\r\n          <CardBody>\r\n              <div ><CardImg top src={\"https://img.icons8.com/color/48/000000/they.png\"} alt='logo'/><b>People</b></div>\r\n              <div>\r\n                <div>Name:{e.name}</div>\r\n                <div>Eye Color: {e.eye_color}</div>\r\n                <div>Age:{e.birth_year}</div>\r\n                <button className='favBtn' onClick={() => remFav(e, 'people')}>\r\n                Remove from Favorites\r\n                </button>\r\n            </div>\r\n            </CardBody>    \r\n            \r\n          </Card>   \r\n   \r\n    </Container>\r\n\r\n    ))\r\n\r\n    //const returnedArray = Array.from(favDataOfPlanet)\r\n    const elementOfPlanet = [favDataOfPlanet].map((el)=>(\r\n    <Container key={el.name}>\r\n         \r\n        <Card>\r\n         <CardBody>\r\n        <div><CardImg top src={\"https://img.icons8.com/color/48/000000/saturn-planet.png\"} alt='logo'/><b>Planets</b></div>\r\n        \r\n          <div>Name:{el.name}</div>\r\n          <div>Climate: {el.climate}</div>\r\n          <div>Terrain:{el.terrain}</div>\r\n          <button className='favBtn' onClick={() => remFav(el, 'planets')}>\r\n                Remove from Favorites\r\n              </button>\r\n  \r\n        \r\n      </CardBody>    \r\n      \r\n    </Card>   \r\n\r\n</Container>\r\n))\r\n\r\n    const showAll=[...elementOfPeople, ...elementOfPlanet]\r\n\r\nfunction selectionOfTab(Tab){\r\n    switch(Tab){\r\n        case 'all':\r\n         return showAll\r\n\r\n        case 'people':\r\n            return elementOfPeople\r\n        case 'planet':\r\n            return elementOfPlanet\r\n        default:\r\n            return showAll\r\n\r\n    }\r\n\r\n}\r\nreturn(\r\n    <div className='listContainer'>\r\n        <ul className=\"nav nav-tabs\">\r\n            <li className=\"active\">\r\n                <button onClick={()=>setTab('all')}>AllItem</button>\r\n            </li>\r\n            <li>\r\n            <button onClick={()=>setTab('planet')}>Planet</button>\r\n            </li>\r\n            <li>\r\n            <button onClick={()=>setTab('people')}>People</button>\r\n            </li>\r\n            <li>\r\n            <button onClick={()=>setTab('default')}>Default</button>\r\n            </li>\r\n        </ul>\r\n\r\n        <div className='listItem'>{selectionOfTab(Tab)}</div>\r\n\r\n    </div>\r\n)\r\n\r\n}\r\n\r\nexport default FavItems\r\n\r\n// const About=()=>{\r\n//     return(\r\n//     <div className=\"container\">\r\n//         <h4 className=\"center\">About</h4>\r\n//         <div class=\"row\">\r\n//       <div class=\"col s12 red\">This div is 12-columns wide on all screen sizes</div>\r\n//       <div class=\"col s3 orange\">6-columns (one-half)</div>\r\n//       <div class=\"col s6 yellow\">6-columns (one-half)</div>\r\n//     </div>\r\n     \r\n     \r\n//         <p>jahirul haq is from bangladesh.jahirul haq is from bangladeshjahirul haq is from bangladeshjahirul haq is from bangladeshjahirul haq is from bangladesh</p>\r\n//     </div>\r\n    \r\n\r\n        \r\n\r\n//     )\r\n// }\r\n\r\n// export default About","\r\nimport React, { useEffect, useState } from 'react'\r\nimport ListItem from './list-item'\r\nimport FavItem from './favItem'\r\nimport axios from 'axios'\r\n\r\n    const storageForPeople=[]\r\n    const storageForPlanet=[]\r\n  \r\n    const Search = ({tabSelected}) => {\r\n      const [people, setPeople] = useState([])\r\n      const [planets, setPlanets] = useState([])\r\n      const [favPeople, setFavPeople]=useState([])\r\n      const [favPlanet, setFavPlanet]=useState([])\r\n      const baseUrlPeople = 'https://swapi.dev/api/people/'\r\n      const baseUrlPlanets = 'https://swapi.dev/api/planets/'\r\n    \r\n      useEffect(() => {\r\n        callApi(setPeople, baseUrlPeople)\r\n        callApiPlanets(setPlanets, baseUrlPlanets)\r\n    \r\n        // eslint-disable-next-line\r\n      }, [])\r\n\r\n      function createFavoriteList(element, from){\r\n        if(from===\"people\"){\r\n          if(storageForPeople.some((ele)=>ele.name===element.name)){\r\n            window.alert(\"elementent is available\")\r\n          }\r\n          else{\r\n            let storage=[]\r\n            storage=[...storage,element]\r\n            storageForPeople.push(...storage)\r\n            setFavPeople([...storageForPeople])\r\n          }\r\n        \r\n        }else{\r\n          if(storageForPlanet.some((elm)=>elm.name===element.name)){\r\n            window.alert(\"elementent is availavle\")\r\n\r\n          }\r\n\r\n          else{\r\n            let storage=[]\r\n            storage=[...storage, element]\r\n            storageForPlanet.push(...storage)\r\n            setFavPlanet(...storageForPlanet)\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n\r\n\r\n    function removeFavouriteItemList(element,from){\r\n      if (from==='people'){\r\n        const indexOfPeople=storageForPeople.indexOf(element)\r\n        if(indexOfPeople>-1){\r\n          storageForPeople.splice(indexOfPeople,1)\r\n        }\r\n\r\n        setFavPeople([...storageForPeople])\r\n\r\n      }else{\r\n        const indexOfPlanet=storageForPlanet.indexOf(element)\r\n        if(indexOfPlanet>-1){\r\n          storageForPlanet.splice(indexOfPlanet,1)\r\n        }\r\n        setFavPlanet([...storageForPlanet])\r\n\r\n      }\r\n\r\n    }\r\n    \r\n      \r\n    \r\n    const temp2 = []\r\n    function callApi (setPeople, baseUrlPeople) {\r\n      axios\r\n        .get(`${baseUrlPeople}`)\r\n        .then((res) => {\r\n          temp2.push(...res.data.results)\r\n          setPeople([...temp2])\r\n          if (res.data.next !== null) {\r\n            callApi(setPeople, res.data.next)\r\n          }\r\n        })\r\n        .catch((err) => console.log('ERROR ---> ' + err))\r\n    }\r\n    \r\n    const temp2Plantes = []\r\n    function callApiPlanets (setPlanets, baseUrlPlanets) {\r\n      \r\n    \r\n      axios\r\n        .get(`${baseUrlPlanets}`)\r\n        .then((res) => {\r\n          temp2Plantes.push(...res.data.results)\r\n          setPlanets([...temp2Plantes])\r\n          if (res.data.next !== null) {\r\n            callApiPlanets(setPlanets, res.data.next)\r\n          }\r\n        })\r\n        .catch((err) => console.log('ERROR ---> ' + err))\r\n    }\r\n\r\n    return(\r\n\r\n    \r\n      <div className='listItemContainer'>\r\n        {tabSelected === 'search' ? (\r\n          <ListItem\r\n            data={people}\r\n            dataPlanets={planets}\r\n    addFav={(element, from) => createFavoriteList(element, from)}/>\r\n\r\n      \r\n    ) : (\r\n      <FavItem\r\n        favDataOfPeople={favPeople}\r\n        favDataOfPlanet={favPlanet}\r\n        remFav={(element, from) => removeFavouriteItemList(element, from)}\r\n      />\r\n    )}\r\n  </div>\r\n            \r\n    )\r\n \r\n    \r\n}\r\n    \r\nexport default Search","// import React, { Component} from 'react';\nimport React, {useState} from 'react';\nimport Navbar from './components/Navbar'\n//import './App.css';\n//import {BrowserRouter ,Route} from 'react-router-dom'\n//import home from './components/Home'\n//import favouriteItem from './components/favouriteItem'\nimport Search from './components/search'\n\nfunction App () {\n  const [currentTab, setCurrentTab] = useState('search')\n    return (\n        <div className='App'>\n           <div className=\"view\" ></div>\n          <header className='App-header'>\n            <Navbar tabCallback={setCurrentTab} />\n            <h1 className=\"text-center\">{currentTab}</h1>\n          </header>\n          <main>\n            <div className='content'>\n              <Search tabSelected={currentTab} />\n            </div>\n          </main>\n        </div>\n      )\n      // <BrowserRouter>\n      // <div className=\"App\">\n       \n      //   <Navbar/>\n  \n      //   <Route exact path='/' component={home}/>\n      //   <Route path='/favouriteItem' component={favouriteItem}/> \n      //   <Route path='/search' component={search}/>\n\n      \n      // </div>\n      \n      // </BrowserRouter>\n      \n    \n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}